QUESTION
A computer program is a collection of instructions that performs specific task when executed by a computer.


Computer requires programs to function.

Computer program is usually written by a computer programmer in programming language.

A collection of computer programs, libraries, and related data are referred to as software.

Computer programs may be categorized along functional lines, such as application software and system software.


CODE
package main1;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map.Entry;
import java.util.Set;
public class Main1
{   
    public static void main(String[] args) 
    {   
        HashMap<String, Integer> wordCountMap = new HashMap<String, Integer>();
        BufferedReader reader = null;
        try
        {
            reader = new BufferedReader(new FileReader("D:\\ex.txt"));
            String currentLine = reader.readLine();
            while (currentLine != null)
            {   
                String[] words = currentLine.toLowerCase().split(" ");
                for (String word : words)
                {
                    if(wordCountMap.containsKey(word))
                    {   
                        wordCountMap.put(word, wordCountMap.get(word)+1);
                    }
                    else
                    {
                        wordCountMap.put(word, 1);
                    }
                }
                currentLine = reader.readLine();
            }
            String mostRepeatedWord = null;
            int count = 0;
            Set<Entry<String, Integer>> entrySet = wordCountMap.entrySet();
            for (Entry<String, Integer> entry : entrySet)
            {
                if(entry.getValue() > count)
                {
                    mostRepeatedWord = entry.getKey();
                    count = entry.getValue();
                }
            }
            System.out.println("The most repeated word in input file is : "+mostRepeatedWord);
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        finally
        {
        }
    }   
}
